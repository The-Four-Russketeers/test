from django.db import models
from django.contrib.auth.models import AbstractBaseUser, BaseUserManager


class MyAccountManager(BaseUserManager):
    def create_user(self, email, username, password = None):
        if not email:
            raise ValueError("Users must have an email address")
        if not username:
            raise ValueError("Users must have a username.")
        user = self.model(
            email = self.normalize_email(email), #normalizes email so that no errors raise when using capitals or lowercase letters
        )

class Account(AbstractBaseUser):
    email                         = models.EmailField(verbose_name = "email", max_length = 60, unique = True)
    username                      = models.CharField(max_length = 30, unique = True)
    date_joined                   = models.DateTimeField(verbose_name= "date joined", auto_now_add = True)
    last_login                    = models.DateTimeField(verbose_name= "last login", auto_now = True) #every time the account is altered/accessed - this will be overwritten
    is_admin                      = models.BooleanField(default=False)
    is_active                     = models.BooleanField(default=True)
    is_staff                      = models.BooleanField(default=False)
    is_superuser                  = models.BooleanField(default=False)

    USERNAME_FIELD = 'email' #sets default login method to use email field
    REQUIRED_FIELDS = ['username']

    def _str_(self):
        return self.username
    
    def has_perm(self, perm, obj= None):
        return self.is_admin
    
    def has_module_perms(self,app_label):
        return True